Resources:
  LoginRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LoginRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: "arn:aws:s3:::${self:custom.frontendBucketName}/*"

  SignupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SignupRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: "arn:aws:s3:::${self:custom.frontendBucketName}/*"

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.frontendBucketName}
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: ${self:custom.frontendBucketName}
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:GetObject
            Resource: "arn:aws:s3:::${self:custom.frontendBucketName}/*"
            Principal: "*"


#  CreateJobApplicationRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: CreateJobApplicationRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      Policies:
#        - PolicyName: LambdaDynamoDBAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - dynamodb:PutItem
#                Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/JD_JobApplication"
#
#  ReadJobApplicationRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: ReadJobApplicationRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      Policies:
#        - PolicyName: LambdaDynamoDBAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - dynamodb:GetItem
#                Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/JD_JobApplication/*"
#
#  UpdateJobApplicationRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: UpdateJobApplicationRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      Policies:
#        - PolicyName: LambdaDynamoDBAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - dynamodb:UpdateItem
#                Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/JD_JobApplication/*"
#
#  DeleteJobApplicationRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: DeleteJobApplicationRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      Policies:
#        - PolicyName: LambdaDynamoDBAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - dynamodb:DeleteItem
#                Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/JD_JobApplication/*"
#
#  ListJobApplicationsRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: ListJobApplicationsRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service:
#                - lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      Policies:
#        - PolicyName: LambdaDynamoDBAccess
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action:
#                  - dynamodb:Scan
#                Resource: "arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/JD_JobApplication"
